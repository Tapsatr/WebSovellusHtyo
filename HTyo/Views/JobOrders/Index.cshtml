@model IEnumerable<HTyo.Models.JobOrder>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<form method="post">
    <input type="button" class="btn" id="new" value="New order" onclick="newUserClicked();" />
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Orderer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReadyDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AcceptedOrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RejectedOrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.JobComment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ToolsComment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HoursOnJob)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriceEstimate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Orderer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReadyDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AcceptedOrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RejectedOrderDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobComment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ToolsComment)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HoursOnJob)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriceEstimate)
            </td>
            <td>
                <a onclick="editClicked(@item.ID)">Edit</a> |
                @if (item.Status == Status.ORDERED)
                {
                    <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

@section scripts
    {
    <script>
            

            //------------------------------Create----------------------------------------------------------------------------------------------
        function newUserClicked() {
            $("#newDialog").load("/JobOrders/Create", function () {
                $("#newDialog").dialog(
                    {
                        title: "Order info", width: 600, height: 800, modal: true, buttons: {
                            OK: function () {
                                createStudent($(this));
                            },
                            Cancel: function () { $(this).dialog("close") }
                        }
                    })
            });
        }
        function createUser(dlg) {
            var newuser = $("#newUserForm").serialize();

            $.ajax({
                type: "POST",
                data: newuser,
                dataType: "json",
                url: "/JobOrders/Create/",
                success: function (data) {
                    alert(data.msg);
                    dlg.dialog("close");
                    getOrders();
                },
                error: function (data) {
                    alert(data.msg);
                }
            });
        }
            //------------------------------Edit----------------------------------------------------------------------------------------------
        function editClicked(id) {

            $("#editDialog").load("/JobOrders/EditOrder", { id: id }, function () {

                $("#editDialog").dialog(    
                    {
                        title: "Edit Order", width: 600, height: 800, modal: true, buttons: {
                            OK: function () {
                                editStudent($(this));
                            },
                            Cancel: function () { $(this).dialog("close") }
                        }
                    })
            });
        }
        function editStudent(dlg) {
            
            var oppilas = $("#editOrderForm").serialize();

            $.ajax({
                type: "POST",
                data: oppilas,
                dataType: "json",
                url: "/JobOrders/EditOrderPost/",
                success: function (data) {
                    alert(data.msg);
                    dlg.dialog("close");
                    getStudents();
                },
                error: function (data) {
                    alert(data.msg);
                }
            });
        }

    </script>
}
<div id="newDialog">
</div>
<div id="editDialog">
</div>
